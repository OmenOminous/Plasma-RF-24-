-- Settings
local infsenabled = true  -- Set this to true to enable infinite stamina
_G.distance = 5  -- Initialize distance
local on = true  -- Toggle for touching balls

-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService('RunService')
local staminaValue = game.AssetService.controllers.movementController.stamina

-- Function to find "ball" parts in the Workspace
local function findBalls()
    local balls = {}
    local workspaceGame = workspace:FindFirstChild("game")

    if workspaceGame then
        for _, obj in ipairs(workspaceGame:GetChildren()) do
            if obj:IsA("Part") and obj:FindFirstChild("network") then
                table.insert(balls, obj)  -- Add ball to the list
            end
        end
    end
    return balls
end

-- Function to trigger touch interest without glitches
local function triggerTouch(ball, target)
    if ball and target then
        local originalPosition = ball.Position  -- Store the original position
        firetouchinterest(ball, target, 0)  -- Start touch
        wait(0.1)  -- Simulate touch duration
        firetouchinterest(ball, target, 1)  -- End touch
        ball.Position = originalPosition  -- Reset position to avoid glitches
    end
end

-- Function to check and set stamina
local function checkAndSetStamina()
    if infsenabled and staminaValue.Value < 100 then
        staminaValue.Value = 100  -- Set stamina to maximum
    end
end

-- Main script that runs every heartbeat
RunService.Heartbeat:Connect(function()
    local Character = LocalPlayer.Character
    if not Character then return end

    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    if not (Humanoid and Humanoid.RigType == Enum.HumanoidRigType.R15) then return end

    local RootPart = Character:FindFirstChild("HumanoidRootPart")
    if not RootPart then return end

    checkAndSetStamina()  -- Check stamina every heartbeat

    -- If the script is active
    if on then
        local balls = findBalls()  -- Find all balls in the workspace
        for _, ball in ipairs(balls) do
            local distanceToBall = (ball.Position - RootPart.Position).Magnitude

            -- If within distance to the RootPart, trigger touch
            if distanceToBall <= _G.distance then
                triggerTouch(ball, RootPart)
            end
        end
    end
end)
